package com.qk365.base.webservice.client.oa;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2015-09-29T14:36:24.500+08:00
 * Generated source version: 2.7.5
 * 
 */
@WebServiceClient(name = "SecurityService", 
                  wsdlLocation = "http://192.168.1.236:8080/iDataService/services/SecurityService?wsdl",
                  targetNamespace = "http://impl.Security.WebService.jdnet.com/") 
public class SecurityService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.Security.WebService.jdnet.com/", "SecurityService");
    public final static QName SecurityServicesImplPort = new QName("http://impl.Security.WebService.jdnet.com/", "SecurityServicesImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://192.168.1.236:8080/iDataService/services/SecurityService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SecurityService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://192.168.1.236:8080/iDataService/services/SecurityService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SecurityService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SecurityService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SecurityService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ISecurityServices
     */
    @WebEndpoint(name = "SecurityServicesImplPort")
    public ISecurityServices getSecurityServicesImplPort() {
        return super.getPort(SecurityServicesImplPort, ISecurityServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISecurityServices
     */
    @WebEndpoint(name = "SecurityServicesImplPort")
    public ISecurityServices getSecurityServicesImplPort(WebServiceFeature... features) {
        return super.getPort(SecurityServicesImplPort, ISecurityServices.class, features);
    }

}
